generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL") // database connection string
}

// Enum for TaskStatus, mirroring the one in TypeScript
enum TaskStatus {
    PENDING
    PROCESSING
    COMPLETED
    FAILED
}

// Enum for CampaignStatus, mirroring the one in TypeScript
enum CampaignStatus {
    DRAFT
    ACTIVE
    ARCHIVED
    FAILED
}

// User model
model User {
    id        String   @id @default(cuid())
    email     String   @unique
    username  String   @unique
    password  String    // Remember to hash passwords
    campaigns Campaign[]
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    deletedAt DateTime?

    @@map("users")
}

// Task model
model Task {
    id          String      @id @default(cuid())
    campaignId  String      // Foreign key to Campaign
    campaign    Campaign    @relation(fields: [campaignId], references: [id])
    status      TaskStatus  @default(PENDING)
    priority    Int         @default(1)
    input       Json
    result      Json?
    error       String?
    createdAt   DateTime    @default(now())
    updatedAt   DateTime    @updatedAt

    @@map("tasks")
}

// Campaign model
model Campaign {
    id          String          @id @default(cuid())
    userId      String
    user        User            @relation(fields: [userId], references: [id])
    username    String
    description String?
    status      CampaignStatus  @default(DRAFT) // e.g., DRAFT, ACTIVE, ARCHIVED
    tasks       Task[]
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt

    @@map("marketing_campaigns")
}